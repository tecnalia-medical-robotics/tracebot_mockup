<?xml version="1.0"?>
<launch>
  <!-- Launch file for loading the tracebot mockup into gazebo. Making use of the UR launch file
  as a template for the nescesarry things to include. -->

  <!--Parameter Declarations-->
  <arg name="mount_base_width" default="0.55"/>
  <arg name="mount_base_length" default="0.55"/>
  <arg name="mount_base_height" default="1.27"/>

  <arg name="arm_mount_offset_x" default="0.1293"/>
  <arg name="arm_mount_offset_y" default="0.0"/>
  <arg name="arm_mount_offset_z" default="0.0707"/>
  <arg name="arm_mount_offset_theta" default="0.0"/>
  <arg name="arm_base_tilt" default="0.785398"/>

  <arg name="left_arm_model" default="ur5e"/>
  <arg name="right_arm_model" default="ur5e"/>

  <arg name="camera_mount_offset_z" default="0.65169"/>
  <arg name="camera_tilt" default="0.785398"/>

  <arg name="rviz" default="false"/>

  <!--Add arguments to robot description-->
  <param name="robot_description" command="$(find xacro)/xacro '$(find tracebot_mockup_gazebo)/urdf/tracebot_mockup.urdf.xacro'
    mount_base_width:=$(arg mount_base_width)
    mount_base_length:=$(arg mount_base_length)
    mount_base_height:=$(arg mount_base_height)
    arm_mount_offset_x:=$(arg arm_mount_offset_x)
    arm_mount_offset_y:=$(arg arm_mount_offset_y)
    arm_mount_offset_z:=$(arg arm_mount_offset_z)
    arm_mount_offset_theta:=$(arg arm_mount_offset_theta)
    arm_base_tilt:=$(arg arm_base_tilt)
    left_arm_model:=$(arg left_arm_model)
    right_arm_model:=$(arg right_arm_model)
    camera_mount_offset_z:=$(arg camera_mount_offset_z)
    camera_tilt:=$(arg camera_tilt)"
  />

  <!-- Controller configuration -->
  <arg name="controllers" default="joint_state_controller left_pos_joint_traj_controller right_pos_joint_traj_controller" doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers" default="left_joint_group_pos_controller right_joint_group_pos_controller" doc="Controllers that are initally loaded, but not started."/>

  <!-- robot_state_publisher configuration -->
  <arg name="tf_prefix" default="" doc="tf_prefix used for the robot."/>
  <arg name="tf_pub_rate" default="500" doc="Rate at which robot_state_publisher should publish transforms."/>

  <!-- Gazebo parameters -->
  <arg name="paused" default="false" doc="Starts Gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts Gazebo gui" />


  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="$(arg tf_pub_rate)" />
    <param name="tf_prefix" value="$(arg tf_prefix)" />
  </node>

  <!-- Start the 'driver' (ie: Gazebo in this case) (Making use of existing ur file for launch)-->
  <!--include file="$(find ur_gazebo)/launch/inc/ur_control.launch.xml">
    <arg name="controller_config_file" value="$(arg controller_config_file)"/>
    <arg name="controllers" value="$(arg controllers)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
    <arg name="gazebo_world" value="$(find tracebot_mockup_gazebo)/worlds/tracebot_mockup_world.world"/>
  </include-->

  <!-- Gazebo parameters -->
  <arg name="gazebo_model_name" default="robot" doc="The name to give to the model in Gazebo (after spawning it)." />
  <arg name="gazebo_world" default="$(find tracebot_mockup_gazebo)/worlds/tracebot_mockup_world.world" doc="The '.world' file to load in Gazebo." />

  <arg name="robot_description_param_name" default="robot_description" doc="Name of the parameter which contains the robot description (ie: URDF) which should be spawned into Gazebo." />
  <arg name="spawn_z" default="0.1" doc="At which height the model should be spawned. NOTE: lower values will cause the robot to collide with the ground plane." />
  <arg name="start_gazebo" default="true" doc="If true, Gazebo will be started. If false, Gazebo will be assumed to have been started elsewhere." />

  <!-- Load controller settings -->
  <rosparam file="$(find tracebot_mockup_gazebo)/config/tracebot_mockup_left_controllers.yaml" command="load"/>
  <rosparam file="$(find tracebot_mockup_gazebo)/config/tracebot_mockup_right_controllers.yaml" command="load"/>

  <!-- Start Gazebo and load the empty world if requested to do so -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg start_gazebo)">
    <arg name="world_name" value="$(arg gazebo_world)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- Spawn the model loaded earlier in the simulation just started -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model"
    args="
      -urdf
      -param $(arg robot_description_param_name)
      -model $(arg gazebo_model_name)
      -z $(arg spawn_z)"
    output="screen" respawn="false" />

  <!-- Load and start the controllers listed in the 'controllers' arg. -->
  <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner"
    args="$(arg controllers)" output="screen" respawn="false" />

  <!-- Load other controllers, but do not start them -->
  <node name="ros_control_stopped_spawner" pkg="controller_manager" type="spawner"
    args="--stopped $(arg stopped_controllers)" output="screen" respawn="false" />
  
  
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find tracebot_mockup_gazebo)/config/tracebot_mockup.rviz" if="$(arg rviz)"/>
</launch>
